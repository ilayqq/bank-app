{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Documents/projects/bank-app/frontend/src/pages/Transactions.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// import { fetchTransactions } from \"../api\";\nimport { Container, Typography, Button, Box, List, ListItem, ListItemText, Card, CardContent } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Transactions() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const navigate = useNavigate();\n\n  //   useEffect(() => {\n  //     const storedUser = localStorage.getItem(\"user\");\n  //     if (!storedUser) {\n  //       navigate(\"/\");\n  //       return;\n  //     }\n\n  //     const user = JSON.parse(storedUser);\n\n  //     fetchTransactions(user.id)\n  //       .then(setTransactions)\n  //       .catch((error) => console.error(\"Ошибка загрузки транзакций\", error));\n  //   }, [navigate]);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        sx: {\n          mt: 3\n        },\n        onClick: () => navigate(\"/dashboard\"),\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          mt: 3\n        },\n        children: transactions.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"\\u041D\\u0435\\u0442 \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this) : transactions.map(t => /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${t.user.name} → ${t.toUser}: $${t.amount}`,\n                secondary: t.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)\n        }, t.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Transactions, \"ycPjEB1+nqcm9qIbWLRf/rPOa7o=\", false, function () {\n  return [useNavigate];\n});\n_c = Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useState","useNavigate","Container","Typography","Button","Box","List","ListItem","ListItemText","Card","CardContent","jsxDEV","_jsxDEV","Transactions","_s","transactions","setTransactions","navigate","maxWidth","children","mt","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","sx","onClick","length","map","t","primary","user","name","toUser","amount","secondary","timestamp","id","_c","$RefreshReg$"],"sources":["/Users/sam/Documents/projects/bank-app/frontend/src/pages/Transactions.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// import { fetchTransactions } from \"../api\";\nimport { Container, Typography, Button, Box, List, ListItem, ListItemText, Card, CardContent } from \"@mui/material\";\n\nexport default function Transactions() {\n  const [transactions, setTransactions] = useState<any[]>([]);\n  const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const storedUser = localStorage.getItem(\"user\");\n//     if (!storedUser) {\n//       navigate(\"/\");\n//       return;\n//     }\n\n//     const user = JSON.parse(storedUser);\n\n//     fetchTransactions(user.id)\n//       .then(setTransactions)\n//       .catch((error) => console.error(\"Ошибка загрузки транзакций\", error));\n//   }, [navigate]);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box mt={5}>\n        <Typography variant=\"h4\">История транзакций</Typography>\n        <Button variant=\"outlined\" color=\"secondary\" sx={{ mt: 3 }} onClick={() => navigate(\"/dashboard\")}>\n          Назад\n        </Button>\n        <List sx={{ mt: 3 }}>\n          {transactions.length === 0 ? (\n            <Typography>Нет транзакций</Typography>\n          ) : (\n            transactions.map((t) => (\n              <Card key={t.id} sx={{ mt: 2 }}>\n                <CardContent>\n                  <ListItem>\n                    <ListItemText\n                      primary={`${t.user.name} → ${t.toUser}: $${t.amount}`}\n                      secondary={t.timestamp}\n                    />\n                  </ListItem>\n                </CardContent>\n              </Card>\n            ))\n          )}\n        </List>\n      </Box>\n    </Container>\n  );\n}\n"],"mappings":";;AAAA,SAAoBA,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AACA,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,IAAI,EAAEC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpH,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAQ,EAAE,CAAC;EAC3D,MAAMiB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;;EAEhC;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEE,oBACEW,OAAA,CAACV,SAAS;IAACgB,QAAQ,EAAC,IAAI;IAAAC,QAAA,eACtBP,OAAA,CAACP,GAAG;MAACe,EAAE,EAAE,CAAE;MAAAD,QAAA,gBACTP,OAAA,CAACT,UAAU;QAACkB,OAAO,EAAC,IAAI;QAAAF,QAAA,EAAC;MAAkB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACxDb,OAAA,CAACR,MAAM;QAACiB,OAAO,EAAC,UAAU;QAACK,KAAK,EAAC,WAAW;QAACC,EAAE,EAAE;UAAEP,EAAE,EAAE;QAAE,CAAE;QAACQ,OAAO,EAAEA,CAAA,KAAMX,QAAQ,CAAC,YAAY,CAAE;QAAAE,QAAA,EAAC;MAEnG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTb,OAAA,CAACN,IAAI;QAACqB,EAAE,EAAE;UAAEP,EAAE,EAAE;QAAE,CAAE;QAAAD,QAAA,EACjBJ,YAAY,CAACc,MAAM,KAAK,CAAC,gBACxBjB,OAAA,CAACT,UAAU;UAAAgB,QAAA,EAAC;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,GAEvCV,YAAY,CAACe,GAAG,CAAEC,CAAC,iBACjBnB,OAAA,CAACH,IAAI;UAAYkB,EAAE,EAAE;YAAEP,EAAE,EAAE;UAAE,CAAE;UAAAD,QAAA,eAC7BP,OAAA,CAACF,WAAW;YAAAS,QAAA,eACVP,OAAA,CAACL,QAAQ;cAAAY,QAAA,eACPP,OAAA,CAACJ,YAAY;gBACXwB,OAAO,EAAE,GAAGD,CAAC,CAACE,IAAI,CAACC,IAAI,MAAMH,CAAC,CAACI,MAAM,MAAMJ,CAAC,CAACK,MAAM,EAAG;gBACtDC,SAAS,EAAEN,CAAC,CAACO;cAAU;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC,GARLM,CAAC,CAACQ,EAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAST,CACP;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB;AAACX,EAAA,CA9CuBD,YAAY;EAAA,QAEjBZ,WAAW;AAAA;AAAAuC,EAAA,GAFN3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}